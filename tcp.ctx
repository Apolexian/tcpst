s[server_user]: server_system<+>tcb_new(TcbInfo).server_system&{
    error_no_room(ErrorInsufficientResources).end,
    error_tcb_init(ErrorDiffservSecurity).end,
    tcb_created(SocketFd).mu(t)(
        server_system&read_queue(Data).server_system<+>write_queue(Data).t
    )
},

s[server_system]: server_user&tcb_new(TcbInfo).server_user<+>{
    error_tcb_init(ErrorDiffservSecurity).end,
    error_no_room(ErrorInsufficientResources).end,
    tcb_created(SocketFd).client_system&syn(SegSynSet).client_system<+>syn_ack(SegSynAckSet).mu(t)(
        client_system&acceptable(SegAckSet).server_user<+>read_queue(Data).server_user&write_queue(Data).client_system<+>seg(SegAckSet).t
    )
},

s[client_system]: client_user&tcb_new(TcbInfo).client_user<+>{
    error_no_access(ErrorConnectionIllegal).end,
    error_no_room(ErrorInsufficientResources).end,
    error_no_remote_socket(ErrorRemoteUnspecified).end,
    tcb_created(SocketFd).server_system<+>syn(SegSynSet).server_system&syn_ack(SegSynAckSet).mu(t)(
        client_user&write_queue(Data).server_system<+>acceptable(SegAckSet).server_system&acceptable(SegAckSet).client_user<+>read_queue(Data).t      
    )
},

s[client_user]: client_system<+>tcb_new(TcbInfo).client_system&{
    error_no_access(ErrorConnectionIllegal).end,
    error_no_room(ErrorInsufficientResources).end,
    error_no_remote_socket(ErrorRemoteUnspecified).end,
    tcb_created(SocketFd).mu(t)(
        client_system<+>write_queue(Data).client_system&read_queue(Data).t
    )
}

