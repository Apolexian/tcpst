s[server]:client<+>{
    auth_user_pass(OkServerReady).client&user(USER).client<+>{
        valid(OkNameValid).client&pass(PASS).client<+>{
            valid(OkResp).mu(t)(
                client&{
                    stat(STAT).client<+>ok(OkResp).t,
                    list(LIST).client<+>{
                        ok(OkResp).t,
                        err(ErrorInsufficientResources).t
                    },
                    retr(RETR).client<+>{
                        ok(OkResp).t,
                        err(ErrorInsufficientResources).t
                    },
                    dele(DELE).client<+>{
                        ok(OkResp).t,
                        err(ErrorInsufficientResources).t
                    },
                    noop(NOOP).client<+>ok(OkResp).t,
                    rset(RSET).client<+>ok(OkResp).t,
                    quit(QUIT).client<+>ok(OkResp).end
                }),
            invalid(ErrInvalidPass).client&quit(QUIT).client<+>ok(OkResp).end,
            unable_to_lock(ErrUnableToLock).client&quit(QUIT).client<+>ok(OkResp).end
        },
        invalid(ErrNameInvalid).client&quit(QUIT).client<+>ok(OkResp).end
    },
    auth_apor(OkServerTimestamp).client&apor(APORDigest).client<+>{
        denied(ErrPermDenied).client&quit(QUIT).client<+>ok(OkResp).end,
        unable_to_lock(ErrUnableToLock).client&quit(QUIT).client<+>ok(OkResp).end,
        valid(OkResp).mu(t)(
            client&{
                stat(STAT).client<+>ok(OkResp).t,
                list(LIST).client<+>{
                    ok(OkResp).t,
                    err(ErrorInsufficientResources).t
                },
                retr(RETR).client<+>{
                    ok(OkResp).t,
                    err(ErrorInsufficientResources).t
                },
                dele(DELE).client<+>{
                    ok(OkResp).t,
                    err(ErrorInsufficientResources).t
                },
                noop(NOOP).client<+>ok(OkResp).t,
                rset(RSET).client<+>ok(OkResp).t,
                quit(QUIT).client<+>ok(OkResp).end
        })
    }
},

s[client]:server&{
    auth_user_pass(OkServerReady).server<+>user(USER).server&{
        valid(OkNameValid).server<+>pass(PASS).server&{
            valid(OkResp).mu(t)(
                server<+>{
                   stat(STAT).server&ok(OkResp).t,
                    list(LIST).server&{
                        ok(OkResp).t,
                        err(ErrorInsufficientResources).t
                    },
                    retr(RETR).server&{
                        ok(OkResp).t,
                        err(ErrorInsufficientResources).t
                    },
                    dele(DELE).server&{
                        ok(OkResp).t,
                        err(ErrorInsufficientResources).t
                    },
                    noop(NOOP).server&ok(OkResp).t,
                    rset(RSET).server&ok(OkResp).t,
                    quit(QUIT).server&ok(OkResp).end
                }),
            invalid(ErrInvalidPass).server<+>quit(QUIT).server&ok(OkResp).end,
            unable_to_lock(ErrUnableToLock).server<+>quit(QUIT).server&ok(OkResp).end
        },
        invalid(ErrNameInvalid).server<+>quit(QUIT).server&ok(OkResp).end
    },
    auth_apor(OkServerTimestamp).server<+>apor(APORDigest).server&{
        denied(ErrPermDenied).server<+>quit(QUIT).server&ok(OkResp).end,
        unable_to_lock(ErrUnableToLock).server<+>quit(QUIT).server&ok(OkResp).end,
        valid(OkResp).mu(t)(
            server<+>{
                stat(STAT).server&ok(OkResp).t,
                list(LIST).server&{
                    ok(OkResp).t,
                    err(ErrorInsufficientResources).t
                },
                retr(RETR).server&{
                    ok(OkResp).t,
                    err(ErrorInsufficientResources).t
                },
                dele(DELE).server&{
                    ok(OkResp).t,
                    err(ErrorInsufficientResources).t
                },
                noop(NOOP).server&ok(OkResp).t,
                rset(RSET).server&ok(OkResp).t,
                quit(QUIT).server&ok(OkResp).end
            })
    }
}
